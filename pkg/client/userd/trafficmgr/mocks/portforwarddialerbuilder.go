// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/telepresenceio/telepresence/v2/pkg/client/userd/trafficmgr (interfaces: PortForwardDialerBuilder)

// Package mock_trafficmgr is a generated GoMock package.
package mock_trafficmgr

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dnet "github.com/telepresenceio/telepresence/v2/pkg/dnet"
	kubernetes "k8s.io/client-go/kubernetes"
	rest "k8s.io/client-go/rest"
)

// MockPortForwardDialerBuilder is a mock of PortForwardDialerBuilder interface.
type MockPortForwardDialerBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockPortForwardDialerBuilderMockRecorder
}

// MockPortForwardDialerBuilderMockRecorder is the mock recorder for MockPortForwardDialerBuilder.
type MockPortForwardDialerBuilderMockRecorder struct {
	mock *MockPortForwardDialerBuilder
}

// NewMockPortForwardDialerBuilder creates a new mock instance.
func NewMockPortForwardDialerBuilder(ctrl *gomock.Controller) *MockPortForwardDialerBuilder {
	mock := &MockPortForwardDialerBuilder{ctrl: ctrl}
	mock.recorder = &MockPortForwardDialerBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPortForwardDialerBuilder) EXPECT() *MockPortForwardDialerBuilderMockRecorder {
	return m.recorder
}

// NewK8sPortForwardDialer mocks base method.
func (m *MockPortForwardDialerBuilder) NewK8sPortForwardDialer(arg0 context.Context, arg1 *rest.Config, arg2 kubernetes.Interface) (dnet.PortForwardDialer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewK8sPortForwardDialer", arg0, arg1, arg2)
	ret0, _ := ret[0].(dnet.PortForwardDialer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewK8sPortForwardDialer indicates an expected call of NewK8sPortForwardDialer.
func (mr *MockPortForwardDialerBuilderMockRecorder) NewK8sPortForwardDialer(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewK8sPortForwardDialer", reflect.TypeOf((*MockPortForwardDialerBuilder)(nil).NewK8sPortForwardDialer), arg0, arg1, arg2)
}
