// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/telepresenceio/telepresence/v2/pkg/client/userd/trafficmgr (interfaces: ClusterBuilder)

// Package mock_trafficmgr is a generated GoMock package.
package mock_trafficmgr

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	client "github.com/telepresenceio/telepresence/v2/pkg/client"
	k8s "github.com/telepresenceio/telepresence/v2/pkg/client/userd/k8s"
)

// MockClusterBuilder is a mock of ClusterBuilder interface.
type MockClusterBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockClusterBuilderMockRecorder
}

// MockClusterBuilderMockRecorder is the mock recorder for MockClusterBuilder.
type MockClusterBuilderMockRecorder struct {
	mock *MockClusterBuilder
}

// NewMockClusterBuilder creates a new mock instance.
func NewMockClusterBuilder(ctrl *gomock.Controller) *MockClusterBuilder {
	mock := &MockClusterBuilder{ctrl: ctrl}
	mock.recorder = &MockClusterBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterBuilder) EXPECT() *MockClusterBuilderMockRecorder {
	return m.recorder
}

// NewCluster mocks base method.
func (m *MockClusterBuilder) NewCluster(arg0 context.Context, arg1 *client.Kubeconfig, arg2 []string) (*k8s.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewCluster", arg0, arg1, arg2)
	ret0, _ := ret[0].(*k8s.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewCluster indicates an expected call of NewCluster.
func (mr *MockClusterBuilderMockRecorder) NewCluster(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewCluster", reflect.TypeOf((*MockClusterBuilder)(nil).NewCluster), arg0, arg1, arg2)
}
